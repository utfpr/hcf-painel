{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".json",
          ".mjs",
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
          ".d.ts"
        ]
      },
      "typescript": {}
    }
  },
  "plugins": [
    "import",
    "import-helpers",
    "react-hooks",
    "react-perf"
  ],
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "globals": {
    "window": false,
    "document": false,
    "__DEV__": false
  },
  "rules": {
    "radix": "off",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "no-console": [
      "warn",
      {
        "allow": [
          "warn"
        ]
      }
    ],
    "no-underscore-dangle": [
      "error",
      {
        "allow": [
          "__DEV__"
        ]
      }
    ],
    "no-multiple-empty-lines": [
      2,
      {
        "max": 1
      }
    ],
    "arrow-parens": [
      "warn",
      "as-needed"
    ],
    "max-len": [
      "warn",
      120
    ],
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    "arrow-body-style": "off",
    "import/order": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": [
          [
            "/^react$/",
            "/^react-dom$/"
          ],
          "module",
          "/^~/",
          [
            "parent",
            "sibling",
            "index"
          ]
        ],
        "alphabetize": {
          "order": "asc",
          "ignoreCase": true
        }
      }
    ],
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [
          ".js",
          ".jsx",
          ".tsx"
        ]
      }
    ],
    "react/jsx-indent": [
      "error",
      2
    ],
    "react/jsx-indent-props": [
      "error",
      2
    ],
    "react/prop-types": "off",
    "react/function-component-definition": "off",
    "react/require-default-props": "warn",
    "react/destructuring-assignment": "off",
    "react/jsx-one-expression-per-line": "off",
    "jsx-a11y/control-has-associated-label": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-perf/jsx-no-new-object-as-prop": "error",
    "react-perf/jsx-no-new-array-as-prop": "error",
    "react/jsx-props-no-spreading": "off"
  },
  "overrides": [
    {
      "files": [
        "*.d.ts"
      ],
      "rules": {
        "no-unused-vars": "off",
        "@typescript-eslint/naming-convention": "off"
      }
    },
    {
      "files": [
        "*.js",
        "*.jsx"
      ],
      "rules": {
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-misused-promises": "off"
      }
    },
    {
      "files": [
        "*.test.tsx",
        "./src/setupTests.ts"
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off"
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "no-shadow": "off",
        "no-restricted-exports": "off",
        "react/require-default-props": "off",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "modifiers": [
              "const"
            ],
            "format": [
              "strictCamelCase",
              "StrictPascalCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": [
              "class",
              "enum",
              "enumMember"
            ],
            "format": [
              "StrictPascalCase"
            ]
          },
          {
            "selector": "interface",
            "format": [
              "StrictPascalCase"
            ],
            "prefix": [
              "I"
            ]
          },
          {
            "selector": "typeAlias",
            "format": [
              "StrictPascalCase"
            ],
            "prefix": [
              "T"
            ]
          }
        ],
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false
          }
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "error",
          {
            "after": true
          }
        ]
      }
    }
  ]
}
